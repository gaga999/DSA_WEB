(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[974],{1904:(e,h,t)=>{"use strict";t.r(h),t.d(h,{default:()=>n});var i=t(5155),s=t(2115);class p{getLevel(e){return Math.floor(Math.log2(e))}isMinLevel(e){return this.getLevel(e)%2==0}parent(e){return Math.floor(e/2)}leftChild(e){return 2*e}rightChild(e){return 2*e+1}grandparent(e){return this.parent(this.parent(e))}insert(e){this.steps=[],this.heap.push(e);let h=this.heap.length-1;return this.steps.push({heap:[...this.heap],highlight:[h],description:"Inserted ".concat(e," at index ").concat(h)}),this.pushUp(h),this.steps.push({heap:[...this.heap],highlight:null,description:"Process ended"}),this.steps}deleteMin(){if(this.steps=[],this.heap.length<=1)return this.steps.push({heap:[0],highlight:null,description:"Heap is empty, nothing to delete"}),this.steps.push({heap:[...this.heap],highlight:null,description:"Process ended"}),this.steps;if(2===this.heap.length){let e=this.heap.pop();return this.steps.push({heap:[...this.heap],highlight:null,description:"Removed only element ".concat(e)}),this.steps.push({heap:[...this.heap],highlight:null,description:"Process ended"}),this.steps}let e=this.heap.length-1;return this.heap[1]=this.heap[e],this.heap.pop(),this.steps.push({heap:[...this.heap],highlight:[1,e],description:"Moved last element ".concat(this.heap[1]," from index ").concat(e," to root (index 1)")}),this.pushDown(1),this.steps.push({heap:[...this.heap],highlight:null,description:"Process ended"}),this.steps}deleteMax(){if(this.steps=[],this.heap.length<=1)return this.steps.push({heap:[0],highlight:null,description:"Heap is empty, nothing to delete"}),this.steps.push({heap:[...this.heap],highlight:null,description:"Process ended"}),this.steps;if(2===this.heap.length){let e=this.heap.pop();return this.steps.push({heap:[...this.heap],highlight:null,description:"Removed only element ".concat(e)}),this.steps.push({heap:[...this.heap],highlight:null,description:"Process ended"}),this.steps}let e=this.heap[2]>(this.heap[3]||-1/0)?2:3,h=this.heap[e],t=this.heap.length-1;return(this.steps.push({heap:[...this.heap],highlight:[e],description:"Selected max element ".concat(h," at index ").concat(e)}),this.heap.length<=4)?(e===t?(this.heap.pop(),this.steps.push({heap:[...this.heap],highlight:null,description:"Removed element ".concat(h," at index ").concat(e)})):(this.heap[e]=this.heap[t],this.heap.pop(),this.steps.push({heap:[...this.heap],highlight:[e,t],description:"Moved last element ".concat(this.heap[e]," from index ").concat(t," to index ").concat(e)})),this.steps.push({heap:[...this.heap],highlight:null,description:"Process ended"})):(this.heap[e]=this.heap[t],this.heap.pop(),this.steps.push({heap:[...this.heap],highlight:[e,t],description:"Moved last element ".concat(this.heap[e]," from index ").concat(t," to index ").concat(e)}),this.pushDown(e)),this.steps}getHeap(){return[...this.heap]}getSmallestDescendant(e){let h=e,t=1/0,i=this.leftChild(e),s=this.rightChild(e);for(let e of(i<this.heap.length&&this.heap[i]<t&&(h=i,t=this.heap[i]),s<this.heap.length&&this.heap[s]<t&&(h=s,t=this.heap[s]),[this.leftChild(i),this.rightChild(i),this.leftChild(s),this.rightChild(s)].filter(e=>e<this.heap.length)))this.heap[e]<t&&(h=e,t=this.heap[e]);return h}getLargestDescendant(e){let h=e,t=-1/0,i=this.leftChild(e),s=this.rightChild(e);for(let e of(i<this.heap.length&&this.heap[i]>t&&(h=i,t=this.heap[i]),s<this.heap.length&&this.heap[s]>t&&(h=s,t=this.heap[s]),[this.leftChild(i),this.rightChild(i),this.leftChild(s),this.rightChild(s)].filter(e=>e<this.heap.length)))this.heap[e]>t&&(h=e,t=this.heap[e]);return h}pushDown(e){if(this.isMinLevel(e)){let h=this.getSmallestDescendant(e);if(h!==e)if(this.steps.push({heap:[...this.heap],highlight:[e,h],description:"Comparing ".concat(this.heap[e]," (min level, index ").concat(e,") with smallest descendant ").concat(this.heap[h]," (index ").concat(h,")")}),this.heap[h]<this.heap[e])if(this.getLevel(h)-this.getLevel(e)==2){this.swap(e,h),this.steps.push({heap:[...this.heap],highlight:null,description:"Swapped ".concat(this.heap[h]," with ").concat(this.heap[e])});let t=this.parent(h);this.steps.push({heap:[...this.heap],highlight:[h,t],description:"Comparing ".concat(this.heap[h]," (min level, index ").concat(h,") with parent ").concat(this.heap[t]," (max level, index ").concat(t,")")}),this.heap[h]>this.heap[t]?(this.swap(h,t),this.steps.push({heap:[...this.heap],highlight:null,description:"Swapped ".concat(this.heap[t]," with ").concat(this.heap[h])})):this.steps.push({heap:[...this.heap],highlight:null,description:"No swap needed"}),this.pushDown(h)}else this.swap(e,h),this.steps.push({heap:[...this.heap],highlight:null,description:"Swapped ".concat(this.heap[h]," with ").concat(this.heap[e])});else this.steps.push({heap:[...this.heap],highlight:null,description:"No swap needed"})}else{let h=this.getLargestDescendant(e);if(h===e)return;if(this.steps.push({heap:[...this.heap],highlight:[e,h],description:"Comparing ".concat(this.heap[e]," (max level, index ").concat(e,") with largest descendant ").concat(this.heap[h]," (index ").concat(h,")")}),this.heap[h]>this.heap[e])if(this.getLevel(h)-this.getLevel(e)==2){this.swap(e,h),this.steps.push({heap:[...this.heap],highlight:null,description:"Swapped ".concat(this.heap[h]," with ").concat(this.heap[e])});let t=this.parent(h);this.steps.push({heap:[...this.heap],highlight:[h,t],description:"Comparing ".concat(this.heap[h]," (max level, index ").concat(h,") with parent ").concat(this.heap[t]," (min level, index ").concat(t,")")}),this.heap[h]<this.heap[t]?(this.swap(h,t),this.steps.push({heap:[...this.heap],highlight:null,description:"Swapped ".concat(this.heap[t]," with ").concat(this.heap[h])})):this.steps.push({heap:[...this.heap],highlight:null,description:"No swap needed"}),this.pushDown(h)}else this.swap(e,h),this.steps.push({heap:[...this.heap],highlight:null,description:"Swapped ".concat(this.heap[h]," with ").concat(this.heap[e])});else this.steps.push({heap:[...this.heap],highlight:null,description:"No swap needed"})}}pushUp(e){if(e<=1)return;let h=this.parent(e);this.steps.push({heap:[...this.heap],highlight:[e,h],description:"Comparing ".concat(this.heap[e]," (index ").concat(e,") with parent ").concat(this.heap[h]," (").concat(this.isMinLevel(h)?"min":"max"," level, index ").concat(h,")")}),this.isMinLevel(e)?this.heap[e]>this.heap[h]?(this.swap(e,h),this.steps.push({heap:[...this.heap],highlight:null,description:"Swapped ".concat(this.heap[h]," with ").concat(this.heap[e])}),this.pushUpMax(h)):(this.steps.push({heap:[...this.heap],highlight:null,description:"No swap needed"}),this.pushUpMin(e)):this.heap[e]<this.heap[h]?(this.swap(e,h),this.steps.push({heap:[...this.heap],highlight:null,description:"Swapped ".concat(this.heap[h]," with ").concat(this.heap[e])}),this.pushUpMin(h)):(this.steps.push({heap:[...this.heap],highlight:null,description:"No swap needed"}),this.pushUpMax(e))}pushUpMin(e){let h=this.grandparent(e);h>=1&&(this.steps.push({heap:[...this.heap],highlight:[e,h],description:"Comparing ".concat(this.heap[e]," (min level, index ").concat(e,") with grandparent ").concat(this.heap[h]," (min level, index ").concat(h,")")}),this.heap[e]<this.heap[h]?(this.swap(e,h),this.steps.push({heap:[...this.heap],highlight:null,description:"Swapped ".concat(this.heap[h]," with ").concat(this.heap[e])}),this.pushUpMin(h)):this.steps.push({heap:[...this.heap],highlight:null,description:"No swap needed"}))}pushUpMax(e){let h=this.grandparent(e);h>=1&&(this.steps.push({heap:[...this.heap],highlight:[e,h],description:"Comparing ".concat(this.heap[e]," (max level, index ").concat(e,") with grandparent ").concat(this.heap[h]," (max level, index ").concat(h,")")}),this.heap[e]>this.heap[h]?(this.swap(e,h),this.steps.push({heap:[...this.heap],highlight:null,description:"Swapped ".concat(this.heap[h]," with ").concat(this.heap[e])}),this.pushUpMax(h)):this.steps.push({heap:[...this.heap],highlight:null,description:"No swap needed"}))}swap(e,h){[this.heap[e],this.heap[h]]=[this.heap[h],this.heap[e]]}constructor(){this.heap=[0],this.steps=[]}}let a=e=>{let{inputValue:h,clearInput:t}=e,[a]=(0,s.useState)(new p),[n,l]=(0,s.useState)([]),[c,o]=(0,s.useState)(0),[r,d]=(0,s.useState)([0]),[g,u]=(0,s.useState)(null),[x,w]=(0,s.useState)("");return(0,i.jsxs)("div",{className:"flex flex-col items-center",children:[(0,i.jsxs)("div",{className:"mb-4 flex space-x-2",children:[(0,i.jsx)("button",{onClick:()=>{let e=parseInt(h);if(!isNaN(e)){var i,s,p;let h=a.insert(e);l(h),o(0),d((null==(i=h[0])?void 0:i.heap)||[0]),u((null==(s=h[0])?void 0:s.highlight)||null),w((null==(p=h[0])?void 0:p.description)||""),t()}},className:"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600",children:"Insert"}),(0,i.jsx)("button",{onClick:()=>{var e,h,t;let i=a.deleteMin();l(i),o(0),d((null==(e=i[0])?void 0:e.heap)||[0]),u((null==(h=i[0])?void 0:h.highlight)||null),w((null==(t=i[0])?void 0:t.description)||"")},className:"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600",children:"Delete Min"}),(0,i.jsx)("button",{onClick:()=>{var e,h,t;let i=a.deleteMax();l(i),o(0),d((null==(e=i[0])?void 0:e.heap)||[0]),u((null==(h=i[0])?void 0:h.highlight)||null),w((null==(t=i[0])?void 0:t.description)||"")},className:"bg-purple-500 text-white px-4 py-2 rounded hover:bg-purple-600",children:"Delete Max"}),n.length>0&&c<n.length-1&&(0,i.jsx)("button",{onClick:()=>{if(c<n.length-1){let e=c+1;o(e),d(n[e].heap),u(n[e].highlight),w(n[e].description)}},className:"bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600",children:"Next Step"})]}),(0,i.jsx)("div",{className:"border p-4 bg-white rounded shadow",children:(()=>{if(r.length<=1)return(0,i.jsx)("p",{className:"text-gray-500",children:"Heap is empty"});let e=[],h=[],t=e=>{let h=Math.floor(Math.log2(e));return{x:800/(Math.pow(2,h)+1)*(e-Math.pow(2,h)+1),y:100*h+50}},s=e=>Math.floor(Math.log2(e))%2==0;for(let p=1;p<r.length;p++){let{x:a,y:n}=t(p),l=g&&g.includes(p)?"#F59E0B":s(p)?"#60A5FA":"#34D399";e.push((0,i.jsxs)("g",{children:[(0,i.jsx)("circle",{cx:a,cy:n,r:20,fill:l,stroke:"#1F2937",strokeWidth:"2"}),(0,i.jsx)("text",{x:a,y:n+5,textAnchor:"middle",fill:"white",fontSize:"14",children:r[p]})]},p));let c=2*p,o=2*p+1;if(c<r.length){let e=t(c);h.push((0,i.jsx)("line",{x1:a,y1:n+20,x2:e.x,y2:e.y-20,stroke:"#1F2937",strokeWidth:"2"},"line-".concat(p,"-left")))}if(o<r.length){let e=t(o);h.push((0,i.jsx)("line",{x1:a,y1:n+20,x2:e.x,y2:e.y-20,stroke:"#1F2937",strokeWidth:"2"},"line-".concat(p,"-right")))}}return(0,i.jsxs)("svg",{width:800,height:(Math.floor(Math.log2(r.length))+1)*100,children:[h,e]})})()}),(0,i.jsx)("p",{className:"mt-4 text-gray-700",children:x})]})};function n(){let[e,h]=(0,s.useState)("");return(0,i.jsxs)("div",{className:"min-h-screen bg-gray-100 flex flex-col items-center justify-center p-4",children:[(0,i.jsx)("h1",{className:"text-3xl font-bold text-gray-900 mb-6",children:"Min-Max Heap Visualization (1-based, Even Layers Min, Odd Layers Max)"}),(0,i.jsx)("div",{className:"mb-4",children:(0,i.jsx)("input",{type:"number",value:e,onChange:e=>h(e.target.value),placeholder:"Enter a number",className:"border-2 border-gray-300 bg-white text-gray-900 p-2 rounded mr-2 focus:ring-blue-500"})}),(0,i.jsx)(a,{inputValue:e,clearInput:()=>h("")})]})}},2750:(e,h,t)=>{Promise.resolve().then(t.bind(t,1904))}},e=>{var h=h=>e(e.s=h);e.O(0,[441,684,358],()=>h(2750)),_N_E=e.O()}]);